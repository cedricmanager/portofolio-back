const passport = require('passport');
const JwtStrategy = require('passport-jwt').Strategy;
const ExtractJwt = require('passport-jwt').ExtractJwt;
const jwt = require('jsonwebtoken');

const secretKey = 'blabla';

passport.use(new JwtStrategy({
  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),
  secretOrKey: secretKey,
}, (jwtPayload, done) => {
    try{
        if(jwtPayload.userName=="cedric"){
                    const user = {username : "admin"}
                    done(null,user )
         }
         else{
            done(null,false)
         }
    }catch(e){
        done(error,e)
    }
        
}));
module.exports=passport;

function authenticateJWT(req, res, next) {
    passport.authenticate('jwt', { session: false }, (err, user, info) => {
      if (err) {
        return res.status(401).json({ error: 'Unauthorized' });
      }
      if (!user) {
        return res.status(401).json({ error: 'Unauthorized' });
      }
      req.user = user;
      next();
    })(req, res, next);
  }
module.exports=authenticateJWT();  